# -----------------------------------------------------------------------------
# CppAD: C++ Algorithmic Differentiation: Copyright (C) 2003-17 Bradley M. Bell
#
# CppAD is distributed under multiple licenses. This distribution is under
# the terms of the
#                     Eclipse Public License Version 1.0.
#
# A copy of this license is included in the COPYING file of this distribution.
# Please visit http://www.coin-or.org/CppAD/ for information on other licenses.
# -----------------------------------------------------------------------------
# automake input file
#
# CppAD puts all it's preprocessor definitions in the cppad/configure.hpp
DEFS          =
# -------------------------------------------------------------------------
if CppAD_ADOLC
ADOLC_SRC_FILES    =  mul_level_adolc.cpp mul_level_adolc_ode.cpp
ADOLC_EXTRA_FILES  =
ADOLC_LIB          = -ladolc -lColPack -L$(ADOLC_DIR)/lib -L$(ADOLC_DIR)/lib64
ADOLC_FLAGS        = -I$(ADOLC_DIR)/include
else
ADOLC_EXTRA_FILES =  mul_level_adolc.cpp mul_level_adolc_ode.cpp
ADOLC_SRC_FILES   =
ADOLC_LIB         =
ADOLC_FLAGS       =
endif
# -------------------------------------------------------------------------
if CppAD_HAVE_AR
if CppAD_EIGEN_DIR
# make a special library so can have it's own compile flags (see configure.ac)
EIGEN_EXTRA_FILES   =
noinst_LIBRARIES    = libeigen.a
libeigen_a_SOURCES  =  eigen_det.cpp eigen_array.cpp
EIGEN_LIB           = -L. -leigen
EIGEN_FLAGS         =
libeigen_a_CXXFLAGS = \
	-g $(CXX_FLAGS_EIGEN) \
	-I$(EIGEN_DIR)/include
else
EIGEN_EXTRA_FILES   = eigen_det.cpp eigen_array.cpp
EIGEN_LIB           =
EIGEN_FLAGS         =
endif
else
EIGEN_EXTRA_FILES   = eigen_det.cpp eigen_array.cpp
EIGEN_LIB           =
EIGEN_FLAGS         =
endif
# -------------------------------------------------------------------------
# autotools does not support use of colpack
EXTRA_DIST        =  \
	$(ADOLC_EXTRA_FILES) \
	$(EIGEN_EXTRA_FILES)
#
check_PROGRAMS    = general
#
if CppAD_MS_COMPILER
AM_CXXFLAGS       = -EHsc -g $(ADOLC_FLAGS) $(EIGEN_FLAGS) $(CXX_FLAGS)
else
AM_CXXFLAGS       = -g $(ADOLC_FLAGS) $(EIGEN_FLAGS) $(CXX_FLAGS)
endif
#
AM_CPPFLAGS       = \
	-I. \
	-I$(top_srcdir) \
	$(BOOST_INCLUDE) \
	$(EIGEN_INCLUDE) \
	$(ADOLC_FLAGS) \
	$(EIGEN_FLAGS)
#
LDADD        =  $(ADOLC_LIB)  $(BTHREAD_LIB) $(EIGEN_LIB) $(PTHREAD_LIB)
#
general_SOURCES   = \
	$(ADOLC_SRC_FILES) \
	\
	abort_recording.cpp \
	fabs.cpp \
	acos.cpp \
	acosh.cpp \
	ad_assign.cpp \
	ad_ctor.cpp \
	add.cpp \
	add_eq.cpp \
	ad_fun.cpp \
	ad_in_c.cpp \
	ad_input.cpp \
	ad_output.cpp \
	asin.cpp \
	asinh.cpp \
	atan2.cpp \
	atan.cpp \
	atanh.cpp \
	azmul.cpp \
	base_alloc.hpp \
	base_require.cpp \
	bender_quad.cpp \
	bool_fun.cpp \
	capacity_order.cpp \
	change_param.cpp \
	check_for_nan.cpp \
	compare_change.cpp \
	compare.cpp \
	complex_poly.cpp \
	cond_exp.cpp \
	cos.cpp \
	cosh.cpp \
	div.cpp \
	div_eq.cpp \
	equal_op_seq.cpp \
	erf.cpp \
	general.cpp \
	exp.cpp \
	expm1.cpp \
	for_one.cpp \
	for_two.cpp \
	forward.cpp \
	forward_dir.cpp \
	forward_order.cpp \
	fun_assign.cpp \
	fun_check.cpp \
	hes_lagrangian.cpp \
	hes_lu_det.cpp \
	hes_minor_det.cpp \
	hessian.cpp \
	hes_times_dir.cpp \
	independent.cpp \
	integer.cpp \
	interface2c.cpp\
	interp_onetape.cpp\
	interp_retape.cpp\
	jac_lu_det.cpp \
	jac_minor_det.cpp \
	jacobian.cpp \
	log10.cpp \
	log1p.cpp \
	log.cpp \
	lu_ratio.cpp \
	lu_vec_ad.cpp \
	lu_vec_ad.hpp \
	lu_vec_ad_ok.cpp \
	mul.cpp \
	mul_eq.cpp \
	mul_level.cpp \
	mul_level_ode.cpp \
	near_equal_ext.cpp \
	number_skip.cpp \
	numeric_type.cpp \
	num_limits.cpp \
	ode_stiff.cpp \
	ode_taylor.cpp \
	opt_val_hes.cpp \
	par_var.cpp \
	poly.cpp \
	pow.cpp \
	pow_int.cpp \
	print_for.cpp \
	reverse_checkpoint.cpp \
	reverse_one.cpp \
	reverse_three.cpp \
	reverse_two.cpp \
	rev_one.cpp \
	rev_two.cpp \
	rosen_34.cpp \
	runge45_2.cpp \
	seq_property.cpp \
	sign.cpp \
	sin.cpp \
	sinh.cpp \
	sqrt.cpp \
	stack_machine.cpp \
	sub.cpp \
	sub_eq.cpp \
	tan.cpp \
	tanh.cpp \
	tape_index.cpp \
	unary_minus.cpp \
	unary_plus.cpp \
	value.cpp \
	var2par.cpp \
	vec_ad.cpp

test: check
	./general
